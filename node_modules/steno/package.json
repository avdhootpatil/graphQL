{
  "_args": [
    [
      {
        "raw": "steno@^0.4.1",
        "scope": null,
        "escapedName": "steno",
        "name": "steno",
        "rawSpec": "^0.4.1",
        "spec": ">=0.4.1 <0.5.0",
        "type": "range"
      },
      "C:\\Users\\USer\\Desktop\\github\\grphQl\\node_modules\\lowdb"
    ]
  ],
  "_from": "steno@>=0.4.1 <0.5.0",
  "_id": "steno@0.4.4",
  "_inCache": true,
  "_location": "/steno",
  "_nodeVersion": "5.7.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/steno-0.4.4.tgz_1457525446258_0.39970230776816607"
  },
  "_npmUser": {
    "name": "typicode",
    "email": "typicode@gmail.com"
  },
  "_npmVersion": "3.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "steno@^0.4.1",
    "scope": null,
    "escapedName": "steno",
    "name": "steno",
    "rawSpec": "^0.4.1",
    "spec": ">=0.4.1 <0.5.0",
    "type": "range"
  },
  "_requiredBy": [
    "/lowdb"
  ],
  "_resolved": "https://registry.npmjs.org/steno/-/steno-0.4.4.tgz",
  "_shasum": "071105bdfc286e6615c0403c27e9d7b5dcb855cb",
  "_shrinkwrap": null,
  "_spec": "steno@^0.4.1",
  "_where": "C:\\Users\\USer\\Desktop\\github\\grphQl\\node_modules\\lowdb",
  "author": {
    "name": "typicode"
  },
  "bugs": {
    "url": "https://github.com/typicode/steno/issues"
  },
  "dependencies": {
    "graceful-fs": "^4.1.3"
  },
  "description": "Simple file writer with race condition prevention and atomic writing",
  "devDependencies": {
    "after": "^0.8.1",
    "husky": "^0.11.1",
    "standard": "^6.0.7",
    "tap-dot": "^0.2.3",
    "tape": "^3.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "071105bdfc286e6615c0403c27e9d7b5dcb855cb",
    "tarball": "https://registry.npmjs.org/steno/-/steno-0.4.4.tgz"
  },
  "gitHead": "06e4e11e98dc3550d855e7731f80aacc2cbbd2c3",
  "homepage": "https://github.com/typicode/steno",
  "keywords": [
    "fs",
    "file",
    "write",
    "writer",
    "asynchronous",
    "race",
    "condition",
    "atomic",
    "writing",
    "safe"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "typicode",
      "email": "typicode@gmail.com"
    }
  ],
  "name": "steno",
  "optionalDependencies": {},
  "readme": "# steno [![](http://img.shields.io/npm/dm/steno.svg?style=flat)](https://www.npmjs.org/package/steno)  [![](https://travis-ci.org/typicode/steno.svg?branch=master)](https://travis-ci.org/typicode/steno)\n\n> Simple file writer with __atomic writing__ and __race condition prevention__.\n\nCan be used as a drop-in replacement to `fs.writeFile()`.\n\nBuilt on [graceful-fs](https://github.com/isaacs/node-graceful-fs) and used in [lowdb](https://github.com/typicode/lowdb).\n\n## Install\n\n```\nnpm install steno --save\n```\n\n## Usage\n\n```javascript\nconst steno = require('steno')\n\nsteno.writeFile('file.json', data, err => {\n  if (err) throw err\n})\n```\n\n## The problem it solves\n\n### Without steno\n\nLet's say you have a server and want to save data to disk:\n\n```javascript\nvar data = { counter: 0 }\n\nserver.post('/', (req, res) => {\n  // Increment counter\n  ++data.counter\n\n  // Save data asynchronously\n  fs.writeFile('data.json', JSON.stringify(data), err => {\n    if (err) throw err\n    res.end()\n  })\n})\n```\n\nNow if you have many requests, for example `1000`, there's a risk that you end up with:\n\n```javascript\n// In your server\ndata.counter === 1000\n\n// In data.json\ndata.counter === 865 // ... or any other value\n```\n\nWhy? Because, `fs.write` doesn't guarantee that the call order will be kept. Also, if the server is killed while `data.json` is being written, the file can get corrupted.\n\n### With steno\n\n```javascript\nserver.post('/increment', (req, res) => {\n  ++data.counter\n\n  steno.writeFile('data.json', JSON.stringify(data), err => {\n    if (err) throw err\n    res.end()\n  })\n})\n```\n\nWith steno you'll always have the same data in your server and file. And in case of a crash, file integrity will be preserved.\n\nif needed, you can also use `steno.writeFileSync()` which offers atomic writing too.\n\n__Important: works only in a single instance of Node.__\n\n## License\n\nMIT - [Typicode](https://github.com/typicode)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/typicode/steno.git"
  },
  "scripts": {
    "prepush": "npm test",
    "test": "node test | tap-dot && standard"
  },
  "version": "0.4.4"
}
